設計模式 分為三大類
創建類:「工廠模式」、「獨體模式」(單例模式)

結構類:「裝飾者模式」、「轉接器模式」、「表象模式」、「合成模式」、「代理人模式」、「複合模式」、「橋接模式」

行為類:「策略模式」、「觀察者模式」、「命令模式」、「樣板方法模式」、「反覆器模式」「狀態模式」


1.找出程式中 可能需要「更動」之處，將他們獨立出來，不要和那些不必更動的程式碼混在一起。


2.寫程式是針對「介面」而寫，不是針對「實踐方式」而寫。(依賴倒轉原則)(Dependency Inversion Principle)。

不要為了 如何執行出來為出發點而寫，因為執行出來的方式
很多，要去想如何找出具有彈性 且日後好維護、好擴充而寫，這時候就是去針對介面而寫，將其可能更動之處獨立出來，
也就是呼應到上述的設計守則!


3. 多用「合成」，少用「繼承」(合成複用原則)(Composite Reuse Principle)。


4.設計時，盡量讓需要互動的物件的關係鬆綁(loose coupling)。


5.類別 應該「開放」，以便「擴充」(Open Closed Principle) OCP
       應該「關閉」，禁止修改。

6.依賴抽象，不要依賴具象(Dependency Inversion Principle) DIP 顛覆依賴守則

7.只和你的密友交談(Least Knowledge) 極少化守則

8.不要來找我，我會找你(HollyWood) 好萊烏守則

9.一個類別只有一個可以改變的理由(Single Responsibility Principle) SRP 單一責任守則

